### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})â€¦%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load starship theme
# line 1: `starship` binary as command, from github release
# line 2: starship setup at clone(create init.zsh, completion)
# line 3: pull behavior same as clone, source init.zsh
zinit ice as"command" from"gh-r" \
          atclone"./starship init zsh > init.zsh; ./starship completions zsh > _starship" \
          atpull"%atclone" src"init.zsh"
zinit light starship/starship

eval "$(/opt/homebrew/bin/brew shellenv)"

fastfetch --config examples/14

export PATH="$HOME/.cargo/bin:$PATH"
export PATH="$HOME/.bun/bin:$PATH"

export EDITOR='nvim'
export COLORTERM='truecolor'
export HOMEBREW_NO_ENV_HINTS=1

plugins=(
    git
    eza
    archlinux
    zsh-autosuggestions
    zsh-syntax-highlighting
    zsh-autocomplete
    chezmoi
    bun
    brew
    rust
    tmux
)

export LANG=zh_CN.UTF-8
export LANGUAGE=zh_CN:en_US

export STARSHIP_CONFIG=~/.config/starship/starship.toml

# zoxide init and also set as cd
eval "$(zoxide init zsh --cmd cd)"

# set tmux startup
if [ -z "$TMUX" ]; then
  # Attach to an existing session if one exists, otherwise create a new one.
  tmux attach || exec tmux new-session
fi

# ---- FZF ----

# setup fzf keybindings and fuzzy completion
eval "$(fzf --zsh)"

# --- setup fzf theme ---

export FZF_DEFAULT_OPTS="
--color=fg:-1
--color=fg+:-1
--color=bg:-1
--color=bg+:20
--color=pointer:-1
--color=header:1
--color=border:4
--color=hl:16
--color=hl+:17
--color=info:21
--color=prompt:2
--color=marker:21
--color=spinner:21
--color=scrollbar:dim"

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# -- use fd instead of fzf
export FZF_DEFAULT_COMMAND="fd --hidden --strip-cwd-prefix --exclude .git"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_COMMAND="fd --type=d --hidden --strip-cwd-prefix --exclude /git"

_fzf_compgen_path() {
    fd --hidden --exclude .git . "$1"
}

_fzf_compgen_dir() {
    fd --type=d --hidden --exclude .git ."$1"
}

export FZF_CTRL_T_OPTS="--preview 'bat -n --color=always --line-range :500 {}'"
export FZF_ALT_C_OPTS="--preview 'eza --tree --color=always {} | head -200'"

# Advanced customization of fzf options via _fzf_comprun function
# - The first argument to the function is the name of the command.
# - You should make sure to pass the rest of the arguments to fzf.
_fzf_comprun() {
    local command=$1
    shift

    case "$command" in
        cd)           fzf --preview 'eza --tree --color=always {} | head -200' "$@" ;;
        export|unset) fzf --preview "eval 'echo \$'{}"         "$@" ;;
        ssh)          fzf --preview 'dig {}'                   "$@" ;;
        *)            fzf --preview "bat -n --color=always --line-range :500 {}" "$@" ;;
    esac
}

# ----- Bat (better cat) -----
export BAT_THEME=tokyonight_day

# ----- yazi ----
function yy() {
    local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
    yazi "$@" --cwd-file="$tmp"
    if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
        cd -- "$cwd"
    fi
    rm -f -- "$tmp"
}

# ---- Alias ----
alias cls='clear'
alias vim='nvim'
alias lla='ls -a'

# The following lines have been added by Docker Desktop to enable Docker CLI completions.
fpath=(/Users/jenkin/.docker/completions $fpath)
autoload -Uz compinit
compinit
# End of Docker CLI completions


