# ===================================================================
# üîå Zinit Plugin Manager install & load
# ===================================================================
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})‚Ä¶%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# ===================================================================
# üîß load zinit core annex (required)
# ===================================================================
zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust

# ===================================================================
# üé® Starship prompt
# ===================================================================
zinit ice as"command" from"gh-r" \
          atclone"./starship init zsh > init.zsh; ./starship completions zsh > _starship" \
          atpull"%atclone" src"init.zsh"
zinit light starship/starship

# ===================================================================
# ‚öôÔ∏è Zsh core features (lazy load)
# ===================================================================
zinit wait"1" lucid for \
    OMZL::clipboard.zsh \
    OMZL::history.zsh \
    OMZL::key-bindings.zsh \
    OMZL::completion.zsh

#######################################################
# Add in zinit plugins
#######################################################

zinit ice lucid wait'0'
zinit light Aloxaf/fzf-tab

zinit for \
  wait"0" lucid light-mode \
    zsh-users/zsh-autosuggestions \
    zdharma-continuum/fast-syntax-highlighting \
    zsh-users/zsh-completions \
    zdharma-continuum/history-search-multi-word

# use knqyf263/petÔºàoriginal versionÔºâ
zinit ice as"command" from"gh-r" pick"pet-*darwin*"
zinit light knqyf263/pet

# Add in snippets
zi snippet OMZP::git
zi snippet OMZP::chezmoi
zi snippet OMZP::archlinux
zi snippet OMZP::eza
zi snippet OMZP::bun
zi snippet OMZP::brew
zi snippet OMZP::rust

#######################################################
# üß∞ Cli tools setup
#######################################################

zinit ice as"program" from"gh-r" pick"fzf"
zinit light junegunn/fzf

#######################################################
# History Configuration
#######################################################

HISTSIZE=10000
HISTFILE=~/.zsh_history
SAVEHIST=$HISTSIZE
HISTDUP=erase
setopt appendhistory
setopt sharehistory
setopt hist_ignore_space
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups

eval "$(/opt/homebrew/bin/brew shellenv)"

fastfetch --config examples/14

export PATH="$HOME/.cargo/bin:$PATH"
export PATH="$HOME/.bun/bin:$PATH"

export EDITOR='nvim'
export COLORTERM='truecolor'
export HOMEBREW_NO_ENV_HINTS=1
export LANG=zh_CN.UTF-8
export LANGUAGE=zh_CN:en_US

# zoxide init and also set as cd
eval "$(zoxide init --cmd cd zsh)"

# set tmux startup
if [ -z "$TMUX" ]; then
  # Attach to an existing session if one exists, otherwise create a new one.
  tmux attach || exec tmux new-session
fi

# ---- FZF ----
# --- setup fzf theme ---

if [[ -x "$(command -v fzf)" ]]; then
  export FZF_DEFAULT_OPTS="$FZF_DEFAULT_OPTS \
    --color=fg:-1 \
    --color=fg+:-1 \
    --color=bg:-1 \
    --color=bg+:20 \
    --color=pointer:-1 \
    --color=header:1 \
    --color=border:4 \
    --color=hl:16 \
    --color=hl+:17 \
    --color=info:21 \
    --color=prompt:2 \
    --color=marker:21 \
    --color=spinner:21 \
    --color=scrollbar:dim \
  "
fi

# -- use fd instead of fzf
# export FZF_DEFAULT_COMMAND="fd --hidden --strip-cwd-prefix --exclude .git"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_COMMAND="fd --type=d --hidden --strip-cwd-prefix --exclude /git"

_fzf_compgen_path() {
    fd --hidden --exclude .git . "$1"
}

_fzf_compgen_dir() {
    fd --type=d --hidden --exclude .git ."$1"
}

export FZF_CTRL_T_OPTS="--preview 'bat -n --color=always --line-range :500 {}'"
export FZF_ALT_C_OPTS="--preview 'eza --tree --color=always {} | head -200'"

# ----- Bat (better cat) -----
export BAT_THEME=tokyonight_day

#######################################################
# Functions
#######################################################

# yy shell wrapper that provides the ability to change the current working directory when exiting Yazi.
function yy() {
    local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
    yazi "$@" --cwd-file="$tmp"
    if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
        builtin cd -- "$cwd"
    fi
    rm -f -- "$tmp"
}


#######################################################
# Aliases
#######################################################
alias cls='clear'
alias vim='nvim'
alias lla='ls -a'
alias ls='eza --icons --group-directories-first --color=always --time-style=long-iso'
alias ll='ls -lh'
alias la='ll -a'

# Alias for lazygit
# Link: https://github.com/jesseduffield/lazygit
if [[ -x "$(command -v lazygit)" ]]; then
    alias lg='lazygit'
fi

# The following lines have been added by Docker Desktop to enable Docker CLI completions.
fpath=(/Users/jenkin/.docker/completions $fpath)
autoload -Uz compinit
compinit
# End of Docker CLI completions

#######################################################
# Completion styling
#######################################################

zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' menu no
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls --color $realpath'
zstyle ':fzf-tab:complete:cd:*' popup-pad 30 0
zstyle ':fzf-tab:complete:__zoxide_z:*' fzf-preview 'ls --color $realpath'
zstyle ':fzf-tab:*' fzf-command ftb-tmux-popup
